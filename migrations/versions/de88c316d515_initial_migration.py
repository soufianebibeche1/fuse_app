"""Initial migration

Revision ID: de88c316d515
Revises: 
Create Date: 2025-01-12 23:28:30.165807

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'de88c316d515'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('firstname', sa.String(length=50), nullable=True),
    sa.Column('lastname', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('gender', sa.Enum('male', 'female', 'other', name='genderenum'), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=100), nullable=True),
    sa.Column('profilepic', sa.String(length=256), nullable=True),
    sa.Column('coverpic', sa.String(length=256), nullable=True),
    sa.Column('bio', sa.String(length=256), nullable=True),
    sa.Column('job_title', sa.String(length=100), nullable=True),
    sa.Column('hobbies', sa.String(length=256), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_deactivated', sa.Boolean(), nullable=True),
    sa.Column('email_option_out', sa.Boolean(), nullable=True),
    sa.Column('is_online', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('temp_password', sa.String(length=255), nullable=True),
    sa.Column('verification_token', sa.String(length=255), nullable=True),
    sa.Column('temp_password_expiration', sa.DateTime(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('lockout_until', sa.DateTime(), nullable=True),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=True),
    sa.Column('two_factor_backup_code', sa.String(length=10), nullable=True),
    sa.Column('auth_provider', sa.Enum('local', 'facebook', 'google', 'github', name='authproviderenum'), nullable=True),
    sa.Column('social_id', sa.String(length=255), nullable=True),
    sa.Column('access_token', sa.String(length=255), nullable=True),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('social_id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('ix_user_verification', ['is_verified', 'is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_is_deactivated'), ['is_deactivated'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_is_online'), ['is_online'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_is_verified'), ['is_verified'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('friendships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('friend_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'accepted', 'rejected', name='friendshipstatusenum'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('login_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=False),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('device_type', sa.String(length=50), nullable=True),
    sa.Column('operating_system', sa.String(length=50), nullable=True),
    sa.Column('browser', sa.String(length=50), nullable=True),
    sa.Column('activity_type', sa.Enum('LOGIN', 'LOGOUT', name='activitytype'), nullable=False),
    sa.Column('auth_method', sa.String(length=50), nullable=True),
    sa.Column('login_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('logout_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('session_duration', sa.Integer(), nullable=True),
    sa.Column('successful_login', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('SUCCESS', 'FAILED', 'SUSPICIOUS', 'ACCOUNT_LOCKED', name='loginstatus'), nullable=False),
    sa.Column('failure_reason', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('isp', sa.String(length=100), nullable=True),
    sa.Column('organization', sa.String(length=100), nullable=True),
    sa.Column('login_source', sa.String(length=50), nullable=True),
    sa.Column('suspicious_activity', sa.Boolean(), nullable=True),
    sa.Column('is_audited', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('login_activities', schema=None) as batch_op:
        batch_op.create_index('ix_activity_type', ['activity_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_login_activities_user_id'), ['user_id'], unique=False)
        batch_op.create_index('ix_login_status', ['status'], unique=False)
        batch_op.create_index('ix_login_user_time', ['user_id', 'login_time'], unique=False)

    op.create_table('notification_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email_notifications', sa.Boolean(), nullable=True),
    sa.Column('push_notifications', sa.Boolean(), nullable=True),
    sa.Column('friend_request_notifications', sa.Boolean(), nullable=True),
    sa.Column('comment_notifications', sa.Boolean(), nullable=True),
    sa.Column('like_notifications', sa.Boolean(), nullable=True),
    sa.Column('birthday_notifications', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('actor_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('ACCOUNT_CREATED', 'ACCOUNT_VERIFIED', 'FRIEND_REQUEST', 'BIRTHDAY_REMINDER', 'FRIEND_REQUEST_ACCEPTED', 'POST_LIKED', 'COMMENT_ADDED', 'ACCOUNT_RESET', 'DATA_RESET_REQUEST', name='notificationtype'), nullable=False),
    sa.Column('message', sa.String(length=500), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index('ix_notifications_recipient_created_at', ['recipient_id', 'created_at'], unique=False)
        batch_op.create_index('ix_notifications_recipient_is_read', ['recipient_id', 'is_read'], unique=False)

    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=500), nullable=True),
    sa.Column('image', sa.String(length=256), nullable=True),
    sa.Column('privacy', sa.Enum('public', 'friends', 'private', name='privacylevel'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.create_index('ix_post_user_privacy', ['user_id', 'privacy', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_user_id'), ['user_id'], unique=False)

    op.create_table('user_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_activities', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_activities_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index('ix_user_activity_user_action', ['user_id', 'action_type', 'timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_activities', schema=None) as batch_op:
        batch_op.drop_index('ix_user_activity_user_action')
        batch_op.drop_index(batch_op.f('ix_user_activities_timestamp'))

    op.drop_table('user_activities')
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_posts_user_id'))
        batch_op.drop_index('ix_post_user_privacy')

    op.drop_table('posts')
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index('ix_notifications_recipient_is_read')
        batch_op.drop_index('ix_notifications_recipient_created_at')

    op.drop_table('notifications')
    op.drop_table('notification_settings')
    with op.batch_alter_table('login_activities', schema=None) as batch_op:
        batch_op.drop_index('ix_login_user_time')
        batch_op.drop_index('ix_login_status')
        batch_op.drop_index(batch_op.f('ix_login_activities_user_id'))
        batch_op.drop_index('ix_activity_type')

    op.drop_table('login_activities')
    op.drop_table('friendships')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_is_verified'))
        batch_op.drop_index(batch_op.f('ix_users_is_online'))
        batch_op.drop_index(batch_op.f('ix_users_is_deactivated'))
        batch_op.drop_index(batch_op.f('ix_users_is_active'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index('ix_user_verification')

    op.drop_table('users')
    # ### end Alembic commands ###
